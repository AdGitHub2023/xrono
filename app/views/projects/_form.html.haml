= form_for(@project) do |f|
  - if @project.errors.any?
    #error_explanation
      %h2
        = pluralize(@project.errors.count, "error")
        = "#{t(:prohibited_this_project_from_being_saved)}:"

      %ul
      - @project.errors.full_messages.each do |msg|
        %li= msg

  %fieldset
    .clearfix
      = f.label :name
      .input
        = f.text_field :name
    -if current_user.admin?
      .clearfix
        = f.label :rate_a
        .input
          = f.text_field :rate_a
      .clearfix
        = f.label :rate_b
        .input
          = f.text_field :rate_b
    .clearfix
      = f.label :git_repo_name
      .input
        = f.text_field :git_repo_name
    .clearfix
      = f.label :git_repo_url
      .input
        = f.text_field :git_repo_url
    .clearfix
      = f.label :overtime_multiplier
      .input
        = f.text_field :overtime_multiplier
    .clearfix
      = f.label :completed
      .input
        = f.check_box :completed
    .clearfix
      = f.label :tags
      .input
        = f.text_field :tag_list, :class => "ui-autocomplete-input"
    = hidden_field_tag :client, @project.client.id
    .actions
      = f.submit :class => "add_new_button btn primary"
      = link_to t(:cancel), client_path(@project.client), :class => 'btn'

- content_for :javascripts do
  :javascript
    $(function() {
      var availableTags = #{ActsAsTaggableOn::Tag.all.map(&:name).sort};
      function split( val ) {
        return val.split( /,\s*/ );
      }
      function extractLast( term ) {
        return split( term ).pop();
      }

      $( ".ui-autocomplete-input" )
        // don't navigate away from the field on tab when selecting an item
        .bind( "keydown", function( event ) {
          if ( event.keyCode === $.ui.keyCode.TAB &&
              $( this ).data( "autocomplete" ).menu.active ) {
            event.preventDefault();
          }
        })
        .autocomplete({
          minLength: 0,
          source: function( request, response ) {
            // delegate back to autocomplete, but extract the last term
            response( $.ui.autocomplete.filter(
              availableTags, extractLast( request.term ) ) );
          },
          focus: function() {
            // prevent value inserted on focus
            return false;
          },
          select: function( event, ui ) {
            var terms = split( this.value );
            // remove the current input
            terms.pop();
            // add the selected item
            terms.push( ui.item.value );
            // add placeholder to get the comma-and-space at the end
            terms.push( "" );
            this.value = terms.join( ", " );
            return false;
          }
        });
      });
      

